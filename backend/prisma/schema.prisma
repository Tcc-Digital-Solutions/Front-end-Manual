generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cards {
  idCards     Int       @id @default(autoincrement())
  icone       String    @db.VarChar(255)
  description String    @db.VarChar(255)
  fkProd      String    @db.VarChar(60)
  fkLanguage  Int
  languages   languages @relation(fields: [fkLanguage], references: [idLanguages], onDelete: NoAction, onUpdate: NoAction, map: "IDLanguageCards")
  product     product   @relation(fields: [fkProd], references: [codeId], onDelete: NoAction, onUpdate: NoAction, map: "IDProdCards")

  @@index([fkLanguage], map: "fkIdioma_idx")
  @@index([fkProd], map: "fkProd_idx")
}

model categories {
  idCategories Int        @id @default(autoincrement())
  category     category[]
  product      product[]
}

model category {
  idCategory   Int           @id @default(autoincrement())
  name         String        @db.VarChar(45)
  fkLanguage   Int
  fkCategories Int
  categories   categories    @relation(fields: [fkCategories], references: [idCategories], onDelete: NoAction, onUpdate: NoAction, map: "IDCategoriesCategory")
  languages    languages     @relation(fields: [fkLanguage], references: [idLanguages], onDelete: NoAction, onUpdate: NoAction, map: "IDLanguageCategory")
  product      product[]
  subcategory  subcategory[]

  @@index([fkCategories], map: "IDCategoriesCategory_idx")
  @@index([fkLanguage], map: "IdLanguageCategories_idx")
}

model imgmontage {
  idImgMontage  Int             @id @default(autoincrement())
  img           String          @db.VarChar(255)
  subtitleimage subtitleimage[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model infolog {
  idLog  Int      @id @default(autoincrement())
  action String   @db.VarChar(60)
  fkUser Int
  date   DateTime @db.DateTime(0)
  login  login    @relation(fields: [fkUser], references: [idLogin], onDelete: NoAction, onUpdate: NoAction, map: "fkUser")

  @@index([fkUser], map: "fkUser_idx")
}

model languages {
  idLanguages     Int               @id @default(autoincrement())
  sigla           String            @db.VarChar(20)
  cards           cards[]
  category        category[]
  pdf             pdf[]
  productsinfo    productsinfo[]
  subtitlemontage subtitlemontage[]
  videos          videos[]
}

model login {
  idLogin  Int       @id @default(autoincrement())
  user     String    @db.VarChar(45)
  password String    @db.VarChar(45)
  infolog  infolog[]
}

model montage {
  idMontage     Int             @id @default(autoincrement())
  img_guide     String          @db.VarChar(255)
  fkProd        String          @db.VarChar(60)
  product       product         @relation(fields: [fkProd], references: [codeId], onDelete: NoAction, onUpdate: NoAction, map: "IDMontageProduct")
  subtitleimage subtitleimage[]

  @@index([fkProd], map: "IDMontageProduct")
}

model pdf {
  idPDF      Int       @id @default(autoincrement())
  pdf        String    @db.VarChar(255)
  fkProd     String    @db.VarChar(60)
  fkLanguage Int
  languages  languages @relation(fields: [fkLanguage], references: [idLanguages], onDelete: NoAction, onUpdate: NoAction, map: "IDLanguagePDF")
  product    product   @relation(fields: [fkProd], references: [codeId], onDelete: NoAction, onUpdate: NoAction, map: "IDProdPDF")

  @@index([fkLanguage], map: "fkIdioma_idx")
  @@index([fkProd], map: "fkProd_idx")
}

model product {
  codeId       String         @id @db.VarChar(60)
  img_prod     String         @db.VarChar(255)
  img_360      String         @db.VarChar(255)
  audio        String         @db.VarChar(255)
  fkCategories Int
  cards        cards[]
  montage      montage[]
  pdf          pdf[]
  categories   categories     @relation(fields: [fkCategories], references: [idCategories], onDelete: NoAction, onUpdate: NoAction, map: "IDCategoriesProduct")
  category     category       @relation(fields: [fkCategories], references: [idCategory], onDelete: NoAction, onUpdate: NoAction, map: "IDProductCategory")
  productsinfo productsinfo[]
  videos       videos[]

  @@index([fkCategories], map: "fkCartegories_idx")
}

model productsinfo {
  idProd      Int       @id @default(autoincrement())
  name        String    @db.VarChar(60)
  subtitle    String    @db.VarChar(255)
  description String    @db.Text
  content     String    @db.Text
  fkProd      String    @db.VarChar(60)
  fkLanguage  Int
  languages   languages @relation(fields: [fkLanguage], references: [idLanguages], onDelete: NoAction, onUpdate: NoAction, map: "IDLanguageProducts")
  product     product   @relation(fields: [fkProd], references: [codeId], onDelete: NoAction, onUpdate: NoAction, map: "IDProdInfos")

  @@index([fkLanguage], map: "IDLanguageProducts_idx")
  @@index([fkProd], map: "IDProdInfos_idx")
}

model subcategory {
  idSubcategory Int      @id @default(autoincrement())
  name          String   @db.VarChar(45)
  fkCategory    Int
  category      category @relation(fields: [fkCategory], references: [idCategory], onDelete: NoAction, onUpdate: NoAction, map: "IDSubcategoryCategory")

  @@index([fkCategory], map: "idSubcategoryCategory_idx")
}

model subtitleimage {
  idSubtitleImage Int             @id @default(autoincrement())
  fkImg           Int
  fkSubtitle      Int
  fkMontage       Int
  imgmontage      imgmontage      @relation(fields: [fkImg], references: [idImgMontage], onDelete: NoAction, onUpdate: NoAction, map: "IDImage")
  subtitlemontage subtitlemontage @relation(fields: [fkSubtitle], references: [idSubtitle], onDelete: NoAction, onUpdate: NoAction, map: "IDSubtitle")
  montage         montage         @relation(fields: [fkMontage], references: [idMontage], onDelete: NoAction, onUpdate: NoAction, map: "IDSubtitleImageMontage")

  @@index([fkImg], map: "IDImage_idx")
  @@index([fkMontage], map: "IDSubtitleImageMontage_idx")
  @@index([fkSubtitle], map: "IDSubtitle_idx")
}

model subtitlemontage {
  idSubtitle    Int             @id @default(autoincrement())
  subititleImg  String          @db.VarChar(255)
  fkLanguage    Int
  subtitleimage subtitleimage[]
  languages     languages       @relation(fields: [fkLanguage], references: [idLanguages], onDelete: NoAction, onUpdate: NoAction, map: "IDLanguageMontage")

  @@index([fkLanguage], map: "IDLanguageMontage_idx")
}

model table1 {
  idCategories Int     @id
  fkCategory   String? @db.VarChar(45)
  table1col    String? @db.VarChar(45)
}

model videos {
  idVideo    Int       @id @default(autoincrement())
  title      String    @db.VarChar(45)
  codLink    String    @db.VarChar(255)
  fkLanguage Int
  fkProd     String    @db.VarChar(60)
  languages  languages @relation(fields: [fkLanguage], references: [idLanguages], onDelete: NoAction, onUpdate: NoAction, map: "IDLanguageVideo")
  product    product   @relation(fields: [fkProd], references: [codeId], onDelete: NoAction, onUpdate: NoAction, map: "IDProductVideo")

  @@index([fkProd], map: "IDProductVideo_idx")
  @@index([fkLanguage], map: "fkLanguage_idx")
}
